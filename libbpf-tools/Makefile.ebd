# SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause)
OUTPUT ?= .output
LIBBPF_SRC := $(abspath ../src/cc/libbpf/src)
LIBBPF_OBJ := $(abspath $(OUTPUT)/libbpf.a)
INCLUDES := -I$(OUTPUT) -I../src/cc/libbpf/include/uapi
CFLAGS := -g -O2 -Wall
INSTALL ?= install
prefix ?= /usr/local

APPS = ebd

COMMON_OBJ = \
	$(OUTPUT)/trace_helpers.o \
	$(OUTPUT)/syscall_helpers.o \
	$(OUTPUT)/errno_helpers.o \
	$(OUTPUT)/map_helpers.o \
	$(OUTPUT)/uprobe_helpers.o \
	$(OUTPUT)/memleak.o \
	$(OUTPUT)/lsan.o \
	$(OUTPUT)/profile.o \
	#

.PHONY: all
all: $(APPS)

ifeq ($(V),1)
Q =
msg =
else
Q = @
msg = @printf '  %-8s %s%s\n' "$(1)" "$(notdir $(2))" "$(if $(3), $(3))";
MAKEFLAGS += --no-print-directory
endif

SKELS = memleak.skel.h lsan.skel.h profile.skel.h
$(shell mkdir -p $(OUTPUT) && cp -a $(SKELS) $(OUTPUT))

$(shell sed -i -e 's/\ main/\ memleak_main/' memleak.c)
$(shell sed -i -e 's/\ main/\ lsan_main/' lsan.c)
$(shell sed -i -e 's/\ main/\ profile_main/' profile.c)
$(shell sed -i -e 's/\ argp_program/\ memleak_argp_program/' memleak.c)
$(shell sed -i -e 's/\ argp_program/\ lsan_argp_program/' lsan.c)
$(shell sed -i -e 's/\ argp_program/\ profile_argp_program/' profile.c)
$(shell sed -i -e 's/*argp_program/*memleak_argp_program/' memleak.c)
$(shell sed -i -e 's/*argp_program/*lsan_argp_program/' lsan.c)
$(shell sed -i -e 's/*argp_program/*profile_argp_program/' profile.c)

.PHONY: clean
clean:
	$(call msg,CLEAN)
	$(Q)rm -rf $(OUTPUT) $(APPS)

$(OUTPUT) $(OUTPUT)/libbpf:
	$(call msg,MKDIR,$@)
	$(Q)mkdir -p $@

$(APPS): %: $(OUTPUT)/%.o $(LIBBPF_OBJ) $(COMMON_OBJ) | $(OUTPUT)
	$(call msg,BINARY,$@)
	$(Q)mkdir -p $(OUTPUT)/bin
	$(Q)$(CC) $(CFLAGS) $^ $(LDFLAGS) $(LIBBPF_OBJ)			  \
			-lelf -lz -o $(OUTPUT)/bin/$@

$(patsubst %,$(OUTPUT)/%.o,$(APPS)): %.o: $(SKELS)

$(OUTPUT)/%.o: %.c $(wildcard %.h) $(LIBBPF_OBJ) | $(OUTPUT)
	$(call msg,CC,$@)
	$(Q)$(CC) $(CFLAGS) $(INCLUDES) -c $(filter %.c,$^) -o $@
#	$(Q)git checkout -q $(filter %.c,$^) | true

# Build libbpf.a
$(LIBBPF_OBJ): $(wildcard $(LIBBPF_SRC)/*.[ch]) | $(OUTPUT)/libbpf
	$(call msg,LIB,$@)
	$(Q)$(MAKE) -C $(LIBBPF_SRC) BUILD_STATIC_ONLY=1		      \
			OBJDIR=$(dir $@)/libbpf DESTDIR=$(dir $@)		      \
			INCLUDEDIR= LIBDIR= UAPIDIR= NO_PKG_CONFIG=1		  \
			install

install: $(APPS)
	$(call msg, INSTALL libbpf-tools)
	$(Q)$(INSTALL) -m 0755 -d $(DESTDIR)$(prefix)/bin
	$(Q)$(INSTALL) $(APPS) $(DESTDIR)$(prefix)/bin

# delete failed targets
.DELETE_ON_ERROR:
# keep intermediate (.skel.h, .bpf.o, etc) targets
.SECONDARY:
